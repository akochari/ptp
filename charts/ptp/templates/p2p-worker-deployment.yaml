apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file docker-compose.yml convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: p2p-worker
  name: p2p-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: p2p-worker
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose --file docker-compose.yml convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: p2p-worker
    spec:
      initContainers:
        - name: init-s3-downloader
          image: amazon/aws-cli:latest  # This can be any image with awscli installed
          volumeMounts:
            - name: p2p-worker-claim0
              mountPath: /models
          env:
            - name: AWS_ACCESS_KEY_ID
              value: {{ .Values.access_key| default ""| quote }}
              #valueFrom:
              #  secretKeyRef:
              #    name: aws-secret  # Replace with your secret name
              #    key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              value: {{ .Values.secret_key| default ""| quote }}
              #valueFrom:
              #  secretKeyRef:
              #    name: aws-secret  # Replace with your secret name
              #    key: aws-secret-access-key
            - name: AWS_REGION
              value: "fr-par"  # Replace with your Scaleway bucket region
            - name: AWS_ENDPOINT_URL
              value: "https://s3.fr-par.scw.cloud"  # Replace with your Scaleway S3 endpoint
          command: [ "/bin/sh", "-c" ]
          args:
            - |
              aws s3 sync s3://ptp-models /models  # Replace with your bucket name and path

      containers:
        - args:
            - celery
            - -A
            - p2p.celery
            - worker
            - --loglevel=info
            - --concurrency=8
          env:
            - name: CELERY_BROKER_URL
              value: redis://ptp-redis:6379/0
            - name: DATABASE_URL
              value: postgres://postgres:postgres@ptp-db:5432/postgres
            - name: GET_HOSTS_FROM
              value: dns
            - name: REDIS_URL
              value: redis://ptp-redis:6379/0
          image: {{ .Values.ptp.image.repository }}:{{ .Values.ptp.image.tag }}
          name: worker
          volumeMounts:
            - mountPath: /app/inference/models/
              name: p2p-worker-claim0
      restartPolicy: Always
      volumes:
        - name: p2p-worker-claim0
          persistentVolumeClaim:
            claimName: p2p-worker-claim0
