apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file docker-compose.yml convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: ptp-worker
  name: ptp-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: ptp-worker
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose --file docker-compose.yml convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: ptp-worker
    spec:
      {{- if .Values.ptp.downloadModels }}
      initContainers:
      - name: wait-for-init-job
        image: bitnami/kubectl:latest
        command: ['sh', '-c', 'until [ "$(kubectl get jobs ptp-download-models -o jsonpath="{.status.succeeded}")" = "1" ]; do echo waiting for job to complete; sleep 2; done' ]
      {{- end }}
      containers:
        - args:
            - celery
            - -A
            - ptp.celery
            - worker
            - --loglevel=info
            - --concurrency=8
          env:
            - name: CELERY_BROKER_URL
              value: redis://ptp-redis:6379/0
            - name: DATABASE_URL
              value: postgres://postgres:postgres@ptp-db:5432/postgres
            - name: GET_HOSTS_FROM
              value: dns
            - name: REDIS_URL
              value: redis://ptp-redis:6379/0
          image: {{ .Values.ptp.image.repository }}:{{ .Values.ptp.image.tag }}
          name: worker
          volumeMounts:
            - mountPath: /app/inference/models/
              subPath: models/
              name: ptp-worker-claim0
            - name: settings-volume
              mountPath: /app/ptp/settings.py
              subPath: settings.py
      restartPolicy: Always
      volumes:
        - name: ptp-worker-claim0
          persistentVolumeClaim:
            claimName: ptp-worker-claim0
        - name: settings-volume
          configMap:
            name: settings-config-{{ .Release.Name }}